name: CI

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:

jobs:
  validate-wrapper:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

  build:
    needs: validate-wrapper
    runs-on: ubuntu-latest

    concurrency:
      group: ci-build-${{ github.event_name }}-${{ github.ref }}-${{ matrix.java-version }}-${{ matrix.sdk }}
      cancel-in-progress: true

    strategy:
      fail-fast: false
      matrix:
        java-version:
          - 11
        sdk:
          - 21
          - 22
          - 23
          - 24
          - 25
          - 26
          - 27
          - 28
          - 29
          - 30
          - 31
          - 32

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Gradle Files
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: v1-${{ runner.os }}-gradle-${{ matrix.java-version }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/build-logic/convention/**/*.kt') }}
          restore-keys: |
            v1-${{ runner.os }}-gradle-${{ matrix.java-version }}-

      - name: Configure JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java-version }}

      - name: Create CI robolectric.properties
        run: |
          robolectric_projects=($(find . -regex ".*/src/sharedTest/resources/com/alexvanyo/robolectric.properties" | grep -oP '\./(.*?)/'))
          for project in "${robolectric_projects[@]}"
          do
               mkdir "$project"src/sharedTest/resources/com/alexvanyo/composelife
               echo sdk=${{ matrix.sdk }} > "$project"src/sharedTest/resources/com/alexvanyo/composelife/robolectric.properties
          done

      - name: Run checks
        if: matrix.sdk != '32' # TODO: Enable once Robolectric adds support
        run: ./gradlew check --stacktrace

      - name: Generate code coverage
        if: matrix.sdk == '31'
        run: ./gradlew jacocoTestReport --stacktrace

      - name: Upload coverage to Codecov
        if: matrix.sdk == '31'
        uses: codecov/codecov-action@v2
        with:
          directory: build/reports/jacoco
          fail_ci_if_error: true
          files: jacocoTestDebugUnitTestReport/jacocoTestDebugUnitTestReport.xml,jacocoTestReleaseUnitTestReport/jacocoTestReleaseUnitTestReport.xml

  android-test-gmd:
    needs: build
    runs-on: macos-latest # for hardware acceleration

    concurrency:
      group: ci-android-test-gmd-${{ github.event_name }}-${{ github.ref }}-${{ matrix.java-version }}
      cancel-in-progress: true

    strategy:
      fail-fast: false
      matrix:
        java-version:
          - 11

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Gradle Files
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: v1-${{ runner.os }}-gradle-${{ matrix.java-version }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/build-logic/convention/**/*.kt') }}
          restore-keys: |
            v1-${{ runner.os }}-gradle-${{ matrix.java-version }}-

      - name: Configure JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java-version }}

      - name: Run device checks
        if: ${{ false }} # TODO: Enable once GMD support Github Actions
        run: |
          ./gradlew pixel2api29Check --no-parallel --stacktrace
          ./gradlew pixel2api30Check --no-parallel --stacktrace
          ./gradlew pixel3xlapi29Check --no-parallel --stacktrace
          ./gradlew pixel3xlapi30Check --no-parallel --stacktrace

  android-test-aer-cfg:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - id: set-matrix
        run: |
          if ${{ github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch') }}
          then
            echo "::set-output name=matrix::{\"java-version\":[\"11\"],\"api-level\":[\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\"]}"
          else
            echo "::set-output name=matrix::{\"java-version\":[\"11\"],\"api-level\":[\"21\",\"31\"]}"
          fi

  android-test-aer:
    needs: android-test-aer-cfg
    runs-on: macos-latest # for hardware acceleration

    concurrency:
      group: ci-android-test-aer-${{ github.event_name }}-${{ github.ref }}-${{ matrix.java-version }}-${{ matrix.api-level }}
      cancel-in-progress: true

    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.android-test-aer-cfg.outputs.matrix) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Gradle Files
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: v1-${{ runner.os }}-gradle-${{ matrix.java-version }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/build-logic/convention/**/*.kt') }}
          restore-keys: |
            v1-${{ runner.os }}-gradle-${{ matrix.java-version }}-

      - name: Cache AVD
        uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: v2-${{ runner.os }}-avd-${{ matrix.java-version }}-${{ matrix.api-level }}

      - name: Configure JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java-version }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: echo "Generated AVD snapshot for caching."

      - name: Run tests
        id: tests
        uses: reactivecircus/android-emulator-runner@v2
        continue-on-error: true # Allow uploading logs on failure
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: |
            touch emulator.log                                                         # create log file
            chmod 777 emulator.log                                                     # allow writing to log file
            adb logcat >> emulator.log &                                               # output logs to the log file
             # run the tests, with one retry attempt
            (echo "==== Attempt 1 ====" && ./gradlew connectedCheck --stacktrace) || (echo "==== Attempt 2 ====" && ./gradlew connectedCheck --stacktrace) || (echo "==== Both attempts failed ====" && exit 1)

      - name: Upload failing test logs
        uses: actions/upload-artifact@v2
        with:
          name: android-test-aer-${{ matrix.api-level }}-logs
          path: emulator.log

      - name: Raise error on test failure
        if: steps.tests.outcome != 'success'
        run: exit 1
