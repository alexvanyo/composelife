name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        java-version:
          - 11
        sdk:
          - 21
          - 22
          - 23
          - 24
          - 25
          - 26
          - 27
          - 28
          - 29
          - 30
          - 31

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Cache Gradle Files
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: v1-${{ runner.os }}-gradle-${{ matrix.java-version }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/buildSrc/**/*.kt') }}
          restore-keys: |
            v1-${{ runner.os }}-gradle-${{ matrix.java-version }}-

      - name: Configure JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java-version }}

      - name: Create CI robolectric.properties
        run: |
          mkdir app/src/sharedTest/resources/com/alexvanyo/composelife
          echo sdk=${{ matrix.sdk }} > app/src/sharedTest/resources/com/alexvanyo/composelife/robolectric.properties

      - name: Run checks
        run: ./gradlew check --stacktrace

      - name: Generate code coverage
        if: matrix.sdk == '31'
        run: ./gradlew jacocoTestReport --stacktrace

      - name: Upload coverage to Codecov
        if: matrix.sdk == '31'
        uses: codecov/codecov-action@v2
        with:
          directory: app/build/reports/jacoco
          fail_ci_if_error: true
          files: jacocoTestDebugUnitTestReport/jacocoTestDebugUnitTestReport.xml,jacocoTestReleaseUnitTestReport/jacocoTestReleaseUnitTestReport.xml

  android-test-gmd:
    needs: build
    runs-on: macos-latest # for hardware acceleration

    strategy:
      fail-fast: false
      matrix:
        java-version:
          - 11

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Cache Gradle Files
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: v1-${{ runner.os }}-gradle-${{ matrix.java-version }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/buildSrc/**/*.kt') }}
          restore-keys: |
            v1-${{ runner.os }}-gradle-${{ matrix.java-version }}-

      - name: Configure JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java-version }}

      - name: Run device checks
        run: |
          ./gradlew pixel2api29Check --stacktrace
          ./gradlew pixel2api30Check --stacktrace
          ./gradlew pixel3xlapi29Check --stacktrace
          ./gradlew pixel3xlapi30Check --stacktrace

  android-test-aer:
    needs: build
    runs-on: macos-latest # for hardware acceleration

    strategy:
      fail-fast: false
      matrix:
        java-version:
          - 11
        api-level:
          - 21
          - 31

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Cache Gradle Files
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: v1-${{ runner.os }}-gradle-${{ matrix.java-version }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/buildSrc/**/*.kt') }}
          restore-keys: |
            v1-${{ runner.os }}-gradle-${{ matrix.java-version }}-

      - name: Cache AVD
        uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: v1-${{ runner.os }}-avd-${{ matrix.java-version }}-${{ matrix.api-level }}

      - name: Configure JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java-version }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: echo "Generated AVD snapshot for caching."

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: ./gradlew connectedCheck --stacktrace
