name: CI

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:

jobs:
  validate-wrapper:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

  build-cfg:
    needs: validate-wrapper
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - id: set-matrix
        run: |
          if ${{ github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch') }}
          then
            MATRIX='
              {"sdk": "21"},
              {"sdk": "22"},
              {"sdk": "23"},
              {"sdk": "24"},
              {"sdk": "25"},
              {"sdk": "26"},
              {"sdk": "27"},
              {"sdk": "28"},
              {"sdk": "29"},
              {"sdk": "30"},
              {"sdk": "31"},
              {"sdk": "32"},
              {"sdk": "33"}
            '
          else
            MATRIX='
              {"sdk": "21"},
              {"sdk": "33"}
            '
          fi
          echo "matrix={\"include\":[${MATRIX//$'\n'/}]}" >> $GITHUB_OUTPUT

  build-cfg-check:
    needs: build-cfg
    runs-on: ubuntu-latest
    steps:
      - name: Check matrix configuration
        run: |
          matrix='${{ needs.build-cfg.outputs.matrix }}'
          echo $matrix
          echo $matrix | jq .

  build:
    needs: build-cfg
    runs-on: ubuntu-latest

    concurrency:
      group: ci-build-${{ github.event_name }}-${{ github.ref }}-${{ matrix.sdk }}
      cancel-in-progress: true

    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.build-cfg.outputs.matrix) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Copy ci-gradle.properties
        run: |
          mkdir -p ~/.gradle
          cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Configure JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Accept license
        run: echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_SDK_ROOT/licenses/android-sdk-preview-license"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Create CI robolectric.properties
        run: |
          robolectric_projects=($(find . -regex ".*/src/androidSharedTest/resources/com/alexvanyo/robolectric.properties" | grep -oP '\./(.*?)/'))
          for project in "${robolectric_projects[@]}"
          do
               mkdir "$project"src/androidSharedTest/resources/com/alexvanyo/composelife
               echo sdk=${{ matrix.sdk }} > "$project"src/androidSharedTest/resources/com/alexvanyo/composelife/robolectric.properties
          done

      - name: Sync project
        run: ./gradlew tasks

      - name: Assemble
        # Assemble with running benchmarks and generating baseline profile to ensure those compile
        run: ./gradlew assemble -Pcom.alexvanyo.composelife.runBenchmarks=true -Pcom.alexvanyo.composelife.generateBaselineProfile=true

      - name: Run build-logic checks
        run: ./gradlew check -p build-logic --stacktrace

      - name: Run checks
        run: ./gradlew check --stacktrace

      - name: Generate code coverage
        if: matrix.sdk == '33'
        run: ./gradlew jacocoTestReport --stacktrace

      - name: Upload coverage to Codecov
        if: matrix.sdk == '33'
        uses: codecov/codecov-action@v3
        with:
          # TODO: Remove once https://github.com/codecov/codecov-action/issues/837 is resolved
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: build/reports/jacoco
          fail_ci_if_error: true
          files: jacocoTestDebugUnitTestReport/jacocoTestDebugUnitTestReport.xml,jacocoTestReleaseUnitTestReport/jacocoTestReleaseUnitTestReport.xml

  android-test-gmd-cfg:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - id: set-matrix
        run: |
          if ${{ github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch') }}
          then
            MATRIX='
              {"api-level": "21", "target": "aosp", "device": "nexus4"},
              {"api-level": "22", "target": "aosp", "device": "nexus4"},
              {"api-level": "23", "target": "aosp", "device": "nexus4"},
              {"api-level": "24", "target": "aosp", "device": "nexus4"},
              {"api-level": "25", "target": "aosp", "device": "nexus4"},
              {"api-level": "26", "target": "aosp", "device": "nexus4"},
              {"api-level": "27", "target": "aosp", "device": "pixel2"},
              {"api-level": "28", "target": "aosp", "device": "pixel2"},
              {"api-level": "28", "target": "wear", "device": "wearoslargeround"},
              {"api-level": "28", "target": "wear", "device": "wearossquare"},
              {"api-level": "29", "target": "aosp", "device": "pixel2"},
              {"api-level": "30", "target": "aosp", "device": "pixel3xl"},
              {"api-level": "30", "target": "aospatd", "device": "pixel2"},
              {"api-level": "30", "target": "wear", "device": "wearoslargeround"},
              {"api-level": "30", "target": "wear", "device": "wearossquare"},
              {"api-level": "31", "target": "aosp", "device": "pixel3xl"},
              {"api-level": "31", "target": "aospatd", "device": "pixel2"},
              {"api-level": "32", "target": "google", "device": "pixel6pro"},
              {"api-level": "32", "target": "google", "device": "pixelc"},
              {"api-level": "32", "target": "desktop", "device": "mediumdesktop"},
              {"api-level": "33", "target": "google", "device": "pixel6pro"},
              {"api-level": "33", "target": "google", "device": "pixelc"}
              {"api-level": "33", "target": "wear", "device": "wearoslargeround"},
              {"api-level": "33", "target": "wear", "device": "wearossquare"},
            '
          else
            MATRIX='
              {"api-level": "23", "target": "aosp", "device": "nexus4"},
              {"api-level": "30", "target": "aospatd", "device": "pixel2"},
              {"api-level": "30", "target": "wear", "device": "wearoslargeround"}
            '
          fi
          echo "matrix={\"include\":[${MATRIX//$'\n'/}]}" >> $GITHUB_OUTPUT

  android-test-gmd-cfg-check:
    needs: android-test-gmd-cfg
    runs-on: ubuntu-latest
    steps:
      - name: Check matrix configuration
        run: |
          matrix='${{ needs.android-test-gmd-cfg.outputs.matrix }}'
          echo $matrix
          echo $matrix | jq .

  android-test-gmd:
    needs: android-test-gmd-cfg
    runs-on: macos-latest # for hardware acceleration
    timeout-minutes: 120

    concurrency:
      group: ci-android-test-gmd-${{ github.event_name }}-${{ github.ref }}-${{ matrix.device }}-${{ matrix.api-level }}
      cancel-in-progress: true

    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.android-test-gmd-cfg.outputs.matrix) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Copy ci-gradle.properties
        run: |
          mkdir -p ~/.gradle
          cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Cache AVD
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
          key: v2-${{ runner.os }}-gmd-${{ matrix.device }}-${{ matrix.api-level }}-${{ matrix.target }}

      - name: Configure JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Accept license
        run: echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_SDK_ROOT/licenses/android-sdk-preview-license"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Package for tests
        run: ./gradlew packageDebugAndroidTest packageStagingAndroidTest

      - name: Run device checks
        run: |
          # run the tests, with one retry attempt
          run_tests () { ./gradlew ${{ matrix.target }}${{ matrix.device }}api${{ matrix.api-level }}Check --no-parallel -Dorg.gradle.workers.max=1 --stacktrace -Pandroid.testoptions.manageddevices.emulator.gpu="swiftshader_indirect"; }
          (echo "==== Attempt 1 ====" && run_tests) || (echo "==== Attempt 2 ====" && run_tests) || (echo "==== Both attempts failed ====" && exit 1)
