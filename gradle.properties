# Project-wide Gradle settings.
# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html

# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# Ensure important default jvmargs aren't overwritten. See https://github.com/gradle/gradle/issues/19750
#
# For more information about how Gradle memory options were chosen:
# - Metaspace See https://www.jasonpearson.dev/metaspace-in-jvm-builds/
# - SoftRefLRUPolicyMSPerMB would default to 1000 which with a 4gb heap translates to ~51 minutes.
#   A value of 1 means ~4 seconds before SoftRefs can be collected, which means its realistic to
#   collect them as needed during a build that should take seconds to minutes.
# - CodeCache normally defaults to a very small size. Increasing it from platform defaults of 32-48m
#   because of how many classes can be loaded into memory and then cached as native compiled code
#   for a small speed boost.
org.gradle.jvmargs=-Dfile.encoding=UTF-8 -XX:+UseG1GC -XX:SoftRefLRUPolicyMSPerMB=1 -XX:ReservedCodeCacheSize=256m -XX:+HeapDumpOnOutOfMemoryError -Xmx6g -Xms6g

# For more information about how Kotlin Daemon memory options were chosen:
# - Kotlin JVM args only inherit Xmx, ReservedCodeCache, and MaxMetaspace. Since we are specifying
#   other args we need to specify all of them here.
# - We're using the Kotlin Gradle Plugin's default value for ReservedCodeCacheSize, if we do not then
#   the Gradle JVM arg value for ReservedCodeCacheSize will be used.
kotlin.daemon.jvmargs=-Dfile.encoding=UTF-8 -XX:+UseG1GC -XX:SoftRefLRUPolicyMSPerMB=1 -XX:ReservedCodeCacheSize=320m -XX:+HeapDumpOnOutOfMemoryError -Xmx6g -Xms6g

# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
org.gradle.caching=true
org.gradle.parallel=true
org.gradle.configuration-cache=true
org.gradle.configuration-cache.parallel=true
# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app"s APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true
# Kotlin code style for this project: "official" or "obsolete":
kotlin.code.style=official
# Disable warning for Kotlin Multiplatform Projects
kotlin.mpp.stability.nowarn=true
kotlin.mpp.androidSourceSetLayoutVersion=2
kotlin.mpp.applyDefaultHierarchyTemplate=false

ksp.useKSP2=true
android.lint.useK2Uast=true

android.r8.maxWorkers=2

# Ensure correctness for desugaring compileOnly dependencies in libraries
# https://issuetracker.google.com/issues/230454566
# This prevents https://github.com/square/leakcanary/issues/2483 / https://github.com/square/leakcanary/issues/2314
# with androidx.lifecycle version 2.8.0-alpha03+
android.useFullClasspathForDexingTransform=true

# Allow using GMD to test API 26 and below
android.experimental.testOptions.managedDevices.allowOldApiLevelDevices=true
# Allow using experimental device images for GMD
android.sdk.channel=3

roborazzi.test.verify=true

# Custom project properties
# These values can be overridden for debugging through a task, or in a home gradle.properties file.

# If "true", parameterization for screenshot tests will be done withing a single run test.
# This is faster, as it requires less teardown/initialization for each test.
# If "false", parameterization will be done by the test runners.
# This results in a single test for each screenshot, to aid in debugging.
# The default value is "true".
com.alexvanyo.composelife.combinedScreenshotTests=true

# If "true", Android tests will be configured to run twice: once as instrumented tests on emulator
# or a physical device, and once using Robolectric
# If "robolectric", Android tests will be configured to only run using Robolectric.
# If "android", Android tests will be configured to only run using instrumentation on emulator or
# a physical device.
# Running in one configuration makes it easier to debug using Android Studio.
# The default value is "true".
com.alexvanyo.composelife.useSharedTest=true

# The build type to use for tests. This only applies to application modules, as library modules
# are single-variant.
# The default value is "staging".
com.alexvanyo.composelife.testBuildType=staging

# If "true", keeper will be used to enable testing with R8 enabled.
# The default value is "true".
com.alexvanyo.composelife.enableKeeper=true

# If present, a comma separated list of Gradle managed devices to enable.
# This can be useful to have "all devices" checks run a reasonable amount of devices.
#com.alexvanyo.composelife.enabledGradleManagedDevices=aospatdpixel2api30
